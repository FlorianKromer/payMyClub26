sonata_delivery:
    selector:             sonata.delivery.selector.default

    # This allows you to configure provided delivery methods
    services:
        free_address_required:
            name:                 free_address_required
            code:                 free_address_required
            priority:             10
        free_address_not_required:
            name:                 free_address_not_required
            code:                 free_address_not_required
            priority:             10

    # Here you will enable the delivery methods you wish to provide
    # and add your custom ones
    methods:
        free_address_required: ~     # This is a provided method, we don't need to specify its service id
        # take_away: application.sonata.delivery.take_away    # Custom delivery method, we specify the service id

sonata_customer:
    class:
        customer:             Application\Sonata\CustomerBundle\Entity\Customer
        address:              Application\Sonata\CustomerBundle\Entity\Address
        order:                Application\Sonata\OrderBundle\Entity\Order
        user:                 Application\Sonata\UserBundle\Entity\User
    
sonata_payment:
    methods:
        pass: ~
    services:
        pass:
            name:    Pass
            code:    pass
            browser: sonata.payment.browser.curl

            transformers:
                basket: sonata.payment.transformer.basket
                order:  sonata.payment.transformer.order

            options:
                shop_secret_key: assdsds
                url_callback:    sonata_payment_callback
                url_return_ko:   sonata_payment_error
                url_return_ok:   sonata_payment_confirmation


    # service which find the correct payment methods for a basket
    selector: sonata.payment.selector.simple

    # service which generate the correct order and invoice number
    generator: sonata.payment.generator.mysql

    transformers:
        order:  sonata.payment.transformer.order
        basket: sonata.payment.transformer.basket

sonata_price:
    currency: EUR

sonata_product:
    products:
        sonata.ecommerce_demo.product.bowl:
            provider: sonata.ecommerce_demo.product.bowl.type
            manager: sonata.ecommerce_demo.product.bowl.manager
        # Goodies
        # sonata.ecommerce_demo.product.goodie:
        #     provider: sonata.ecommerce_demo.product.goodie.type
        #     manager:  sonata.ecommerce_demo.product.goodie.manager

        # Travel
        # sonata.ecommerce_demo.product.travel:
        #     provider: sonata.ecommerce_demo.product.travel.type
        #     manager: sonata.ecommerce_demo.product.travel.manager
        #     variations:
        #         fields: [travellers, travelDays, sku, slug, name, price, stock, vatRate, priceIncludingVat, enabled]

    seo:
        product:
            site: '@sonataproject'
            creator: '@th0masr'
            domain: 'http://demo.sonata-project.org'
            media_prefix: 'http://demo.sonata-project.org'
            media_format: 'reference'

sonata_customer:
    class:
        customer:             Application\Sonata\CustomerBundle\Entity\Customer
        address:              Application\Sonata\CustomerBundle\Entity\Address
        order:                Application\Sonata\OrderBundle\Entity\Order
        user:                 Application\Sonata\UserBundle\Entity\User

        # You can also implement custom components classes
        # customer_selector:    Sonata\Component\Customer\CustomerSelector

sonata_basket:

    # Services
    builder:            sonata.basket.builder.standard
    factory:            sonata.basket.session.factory       # Replace with sonata.basket.entity.factory to store in db
    loader:             sonata.basket.loader.standard

    # Model
    class:
        basket:         Application\Sonata\BasketBundle\Entity\Basket
        basket_element: Application\Sonata\BasketBundle\Entity\BasketElement
        customer:       Application\Sonata\CustomerBundle\Entity\Customer

    # Forms
    basket:
        form:
            type:       sonata_basket_basket
            name:       sonata_basket_basket_form
    shipping:
        form:
            type:       sonata_basket_shipping
            name:       sonata_basket_shipping_form
    payment:
        form:
            type:       sonata_basket_payment
            name:       sonata_basket_payment_form

sonata_invoice:
    class:
        invoice:              Application\Sonata\InvoiceBundle\Entity\Invoice
        invoice_element:      Application\Sonata\InvoiceBundle\Entity\InvoiceElement
        order_element:        Application\Sonata\OrderBundle\Entity\OrderElement
        customer:             Application\Sonata\CustomerBundle\Entity\Customer